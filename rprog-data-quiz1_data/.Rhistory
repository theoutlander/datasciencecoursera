find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
find.package("KernSmooth")
library("KernSmooth")
x = factor(c("a","b","c"))
x
x = factor(c("a","b","c", "a"))
x
unclass(a)
unclass(x)
unclass(x)
source('C:/sd/datasciencerepository/coursera/test.r')
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5, 10, length=30)
my_seq = seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
tf <- num_vect >=6
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "The Outlander")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
class(rbind(x,y))
y <- c(3,2,"1")
class(rbind(x,y))
rbind(x,y)
y
y <- c(3,2,"1")
class(y)
?vector
c(1,"a")
class(c(1,"a"))
class(c(1,"a", 2))
class(c(1,a, 2))
class(c(1,x, 2))
x <- list(2, "a", "b", TRUE)
x[1]
x[0]
x[1]
x <- 1:4
y <- 2:3
x + y
class(x + y)
x <- c(3,5,1,10,12,6)
?rbind
x
x[x > 6]
x[x > 6] <- 0
x
x <- c(3,5,1,10,12,6)
x[x > 6]
x[x %in% 1:5]
x[x %in% 1:5] <- 0
x
read.csv
?read.csv
file
?file
? working
??working
??working directory
??`working directory`
wd
getwd
getwd()
setwd("C:\sd\datasciencerepository\coursera\rprog-data-quiz1_data")
setwd(@"C:\sd\datasciencerepository\coursera\rprog-data-quiz1_data")
setwd("C:\\sd\\datasciencerepository\\coursera\\rprog-data-quiz1_data")
getwd()
read.csv(hw1_data)
read.csv("hw1_data.csv")
?read.csv
read.csv("hw1_data.csv", nrows = 2)
nrow(read.csv("hw1_data.csv"))
length(count.fields("hw1_data.csv"))
read.csv("hw1_data.csv", skip=151)
data<-read.csv("hw1_data.csv")
data[47]
data
data[0]
data[1]
data[2]
data[3]
data[10]
data
data[0]
data[1]
data[1,47]
data[1][47]
data(1)
data(1.47)
data(1,47)
data[1,47]
data[1,1]
data[1,2]
data[[1,47]]
data[[47]]
class(data)
??data.frame
data
data[1,]
data[2,]
data[47,]
data[46,]
data[1,47]
data[1,48]
data[1,]
data[0,]
data[47,]
data[1]
sum(data$Ozone)
sum(data$Ozone$NA)
sum(data)
sum
subset(data, Ozone==NA)
subset(data, Ozone==1)
subset(data, Ozone==)
subset(data, Ozone==NULL)
subset(data, Ozone==NIL)
subset(data, Ozone==NAN)
subset(data, Ozone=="NA")
subset(data, Ozone=="")
new_DF <- data[(is.na(data$Ozone),]
new_DF <- data[(is.na(data$Ozone)),]
new_DF
data[1,]
data[1]
data$Ozone[1]
data$Ozone[47]
data$Ozone['na']
data$Ozone['NA']
data$Ozone[data$Ozone=='NA']
data$Ozone[data$Ozone=='NA'] <- NA
data
subset(data$Ozone[data$Ozone == NA])
subset(data, is.na(data$Ozone))
length(subset(data, is.na(data$Ozone)))
nrows(subset(data, is.na(data$Ozone)))
nrow(subset(data, is.na(data$Ozone)))
mean(data[1])
mean(subset(data, !is.na(data$Ozone)))
x<-subset(data, !is.na(data$Ozone))
x
nrow(x)
mean(x)
x
mean(x)
x
mean(x[1])
x[1]
x[1,1]
mean(x[1])
rowMeans(x)
x[1]
mean(x[1])
mean(x)
mean(x, trim=0)
mean(x)
class(x)
as.vector(x)
as.vector(x[1])
xx<-as.vector(x[1])
mean(xx)
class(xx)
as.numeric(x[1])
x
x[1]
x[[1]]
mean(x[[1]])
data
data[1]
subset(data, subset=data$Ozone>31)
subset(data, subset=data$Ozone>31 && data$Temp>90)
subset(data, subset=data$Ozone>31 & data$Temp>90)
q<-subset(data, subset=data$Ozone>31 & data$Temp>90)
mean(data$Solar.R)
mean(data[[data$Solar.R]])
mean(data[[Solar.R]])
mean(data[["Solar.R"]])
mean(data[[2]])
q
q[1]
q[2]
q[[2]]
mean(q[[2]])
q<-subset(data, subset=data$Temp==6)
q
q<-subset(data, subset=data$Month==6)
q
q
q.Temp
q
q<-subset(data, subset=data$Month==6)
class(q)
q$Temp
mean(q$Temp)
q<-subset(data, subset=data$Month==5)
q
q$Ozone
max(q$Ozone)
max
max(q$Ozone)
q$Ozone
mean(q$Ozone)
c(q$Ozone)
v<-c(q$Ozone)
v
class(v)
v[1]
v[v==is.na(v)]
v[is.na(v)]
q<-subset(data, subset=data$Month==5 && !is.na(data$Ozone)
)
q
q<-subset(data, subset=data$Month==5 && is.na(data$Ozone))
q
q<-subset(data, subset=data$Month==5 && !is.na(data$Ozone)
data
data
q<-subset(data, subset=data$Month==5 && !is.na(data$Ozone))
q
subset(data, subset=data$Month==5 && !is.na(data$Ozone))
subset(data, subset=data$Month==5 && !data$Ozone=="NA")
subset(data, subset=data$Month==5 && !is.na(data$Ozone))
d2=data
subset(d2, subset=d2$Month==5 && !is.na(d2$Ozone))
ddsubset(d2, subset=d2$Month==5 && !is.na(d2$Ozone))
dd<-subset(d2, subset=d2$Month==5 && !is.na(d2$Ozone))
dd[1]
dd<-subset(d2, subset=d2$Month==5 || !is.na(d2$Ozone))
dd
dd<-subset(d2, subset=!is.na(d2$Ozone))
dd
dd<-subset(d2, subset=!is.na(d2$Ozone) && d2$Month==5)
dd
d2$Ozone[d2$Ozoone=="NA"]
d2$Ozone[d2$Ozoone==NA]
dd<-subset(d2, subset=!is.na(d2$Ozone) && d2$Month==5)
subset(d2, subset=!is.na(d2$Ozone) && d2$Month==5)
subset(d2, subset=!is.na(d2$Ozone) & d2$Month==5)
d2=subset(d2, subset=!is.na(d2$Ozone) & d2$Month==5)
d2[1]
max(d2[1])
